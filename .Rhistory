MinMax <- complete %>% filter(Chick %in% c(24,32))
MinMax
ggplot(minMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line()
ggplot(MinMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line()
complete %>% group_by(Time) %>% summarize(MeanAtTime = mean(weightgain))
MeanGain <- complete %>% group_by(Time) %>% summarize(MeanAtTime = mean(weightgain))
MinMax + MeanGain
MinMax
MeanGain["Time"] <- complete %>% filter(Chick == 32) %>% select(Time)
MeanGain["Time"] <- complete$Time[1:12]
MeanGain
ggplot(MinMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line() + geom_line(MeanGain, aes(x = Time, y = MeanAtTime))
ggplot(MinMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line() + geom_line(MeanGain, mapping = aes(x = Time, y = MeanAtTime))
MinMax
ggplot(MinMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line() + geom_line(MeanGain, mapping = aes(x = Time, y = MeanAtTime))
Meangain["Chick"] <- c("Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean")
MeanGain["Chick"] <- c("Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean")
MeanGain
ggplot(MinMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line() + geom_line(MeanGain, mapping = aes(x = Time, y = MeanAtTime))
complete
complete %>% group_by(Diet) %>% summarize(variance = var(weightgain) min = min(weightgain), max = max(weightgain))
complete %>% group_by(Diet) %>% summarize(variance = var(weightgain), min = min(weightgain), max = max(weightgain))
MinMaxVarDiet <- complete %>% group_by(Diet) %>% summarize(variance = var(weightgain), min = min(weightgain), max = max(weightgain))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = variance, fill = Diet))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = variance, color = Diet))
ggplot(MinMaxVarDiet) + geom_hist(mapping = aes(x = variance, color = Diet))
ggplot(MinMaxVarDiet) + geom_histogram(mapping = aes(x = variance, color = Diet))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, color = Diet))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = variance, color = Diet))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(y = variance, color = Diet))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = variance), stat = "identity")
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = Max), stat = "identity") + geom_bar(mapping = aes(x = Diet, y = Min), stat = "identity")
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = Max), stat = "identity") + geom_bar(mapping = aes(x = Diet, y = Min), stat = "identity")
MinMaxVarDiet
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = Max, fill = Diet), stat = "identity") + geom_bar(mapping = aes(x = Diet, y = Min, fill = Diet), stat = "identity")
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = max, fill = Diet), stat = "identity") + geom_bar(mapping = aes(x = Diet, y = min, fill = Diet), stat = "identity")
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = max, fill = Diet), stat = "identity") + geom_point(mapping = aes(x = Diet, y = min, fill = Diet), stat = "identity")
MinMax
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = variance), stat = "identity")
data("french_fries", package = "reshape2")
dat <- data("french_fries", package = "reshape2")
library(tidyverse)
colnames(dat)
dat
dat
data("french_fries", package = "reshape2")
french_fries
?french_fries
?data("french_fries", package = "reshape2")
data("fbiwide", package = "classdata")
fbiwide
dat <- fbiwide %>% pivot_longer(names_to = "Type", values_to = "incidences")
dat <- fbiwide %>% pivot_longer(cols = c(Aggravated.assault, Burglary, Larceny.theft),names_to = "Type", values_to = "incidences")
dat
fbiwide
dat
colnames(dat)
dat$incidences
library(readxl)
df
library(tidyverse)
df <- data.frame(x = c("a.b", "a.d", "b.c", NA))
df
df
df <- data.frame(x = c("a.b", "a.d", "b.c", NA), b= 1)
df
df %>% separate(col = x, into = c("A", "B"))
df
df <- df %>% separate(col = x, into = c("A", "B"))
df
df %>% seaparate(col = x, into = c("A", "B"), sep = '[^[:alnum:]]+')
df %>% separate(col = x, into = c("A", "B"), sep = '[^[:alnum:]]+')
df <- data.frame(x = c("a.b", "a.d", "b.c", NA), b= 1)
df
df %>% separate(col = x, into = c("A", "B"))
df
df %>% separate(col = x, into = c("A", "B"), sep = '[^[:alnum:]]+')
'\\x'
cat(\\.)
cat('\\.')
address <- c("1301 8th St. SE, Orange City, Iowa 51041")
df1
df1 <- data.frame(address = address)
df1
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',')
%>% separate(col = StateZip, into = c("State", "Zip", sep = ' '))
%>% separate(col = StateZip, into = c("State", "Zip", sep = ' '))
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',') %>% separate(col = StateZip, into = c("State", "Zip", sep = ' '))
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',') %>% separate(col = StateZip, into = c("Nothing","State", "Zip", sep = ' '))
df1 <- data.frame(address = address)
df1
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',') %>% separate(col = StateZip, into = c("Nothing","State", "Zip", sep = ' '))
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',') %>% separate(col = StateZip, into = c("Nothing","State", "Zip", sep = ' ')) %>% select(-nothing)
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',') %>% separate(col = StateZip, into = c("Nothing","State", "Zip", sep = ' ')) %>% select(-Nothing)
read_csv(url)
campaign <- readr::read_csv(url)
url <- "https://data.iowa.gov/api/views/3adi-mht4/rows.csv"
campaign <- readr::read_csv(url)
campaign
colnames(campaign)
head(campaign)
head(campaign[1:5,6:])
head(campaign[1:5,6:10])
head(campaign[1:5,10:15])
head(campaign[1:5,10:14])
head(campaign[1:5,1:14])
head(campaign[1:5,1:5])
head(campaign[1:5,5:10])
head(campaign[1:5,10:14])
dat <- campaign %>% separate("Date", c("Month", "Day", "Year")) %>% separate("Zip", c('Zip5', 'addon')
dat
dat <- campaign %>% separate("Date", c("Month", "Day", "Year")) %>% separate("Zip", c('Zip5', 'addon'))
dat
dat1 <- dat %>% replace_na(list(addon = '', zip5 = 'Unknown')) %>%
dat2 <- dat %>% drop_na("First Name", "Last Name")
dat <- campaign %>% separate("Date", c("Month", "Day", "Year")) %>% separate("Zip", c('Zip5', 'addon'))
dat1 <- dat %>% replace_na(list(addon = '', zip5 = 'Unknown')) %>%
dat2 <- dat %>% drop_na("First Name", "Last Name")
dat <- campaign %>% separate("Date", c("Month", "Day", "Year")) %>% separate("Zip", c('Zip5', 'addon'))
dat1 <- dat %>% replace_na(list(addon = '', zip5 = 'Unknown'))
dat2 <- dat %>% drop_na("First Name", "Last Name")
dat1
dat2
dat3 <- dat2 %>% unite("Full Name", "First Name", "Last Name", sep = ' ')
dat3
view(dat3)
view(dat3)
dat5 <- dat3 %>% separate(col = "date", into = c("Year", "Month", "Day"))
dat5 <- dat3 %>% separate(col = "Date", into = c("Year", "Month", "Day"))
dat5 %>% select("Expenditure Amount") %>% summarize(Total = sum(), Max = max())
dat3 %>% select("Expenditure Amount") %>% summarize(Total = sum(), Max = max())
dat3 %>% summarize(Total = sum(Expenditure Amount), Max = max(Expenditure Amount))
dat3 %>% summarize(Total = sum(Expenditure Amount), Max = max(Expenditure Amount))
dat3 %>% summarize(Total = sum('Expenditure Amount'), Max = max('Expenditure Amount'))
dat3 %>% summarize(Total = sum("Expenditure Amount"), Max = max('Expenditure Amount'))
dat3 %>% select("Expenditure Amount" %>% summarize(Total = sum(), Max = max())
summary <- dat3 %>% select("Expenditure Amount" %>% summarize(Total = sum(), Max = max())
summary <- dat3 %>% select("Expenditure Amount") %>% summarize(Total = sum(), Max = max())
summary <- dat3 %>% select("Expenditure Amount") %>% summarize_each(Total = sum(), Max = max())
summary <- dat3 %>% select("Expenditure Amount") %>% summarize_each(sum(), max()))
summary <- dat3 %>% select("Expenditure Amount") %>% summarize_each(sum(), max())
dist= pgamma(y, shape = 1.6, 2.0)
dist
rgamma(10000, 1.6,2.0)
sit1 <- rgamma(10000, 1.6,2.0)
mean(rgamma(10000, 1.6,2.0))
var(dist1)
dist <- rgamma(10000, 1.6,2.0)
mean(rgamma(10000, 1.6,2.0))
var(dist1)
mean(dist1)
dist1 <- rgamma(10000, 1.6,2.0)
mean(dist1)
var(dist1)
dist1 <- rgamma(10000, shape = 1.6,scale = 2.0)
mean(dist1)
var(dist1)
1- pgamma(5, shape = 1.6, scale = 2.0)
?pnorm
1-pnorm(5, mean = mean(dist1), sd = sqrt(var(dist1)))
dist2 <- rgamma(10000, shape = 1000, scale = 20)
dist2 <- rgamma(10000, shape = 1000, scale = 20)
mean(dist2)
var(dist2)
median(dist2)
qgamma(.75,shape = 1000, scale = 20)
1.6*2
1.6 * (4)
1000*(20)^2
qgamma(.25, shape = 1000, scale = 20)
dist2 <- rgamma(10000, shape = 1000, scale = 20)
median(dist2)
?pnorm
pnorm(20422.87, mean = 20000, sd = sqrt(400000))
pnorm(20422.87, mean = 20000, sd = sqrt(400000))
pnorm(19569.86, mean = 20000, sd = sqrt(400000))
1-pnorm(5, mean = 3.2, sd = sqrt(6.4))
upper <- pnorm(20422.87, mean = 20000, sd = sqrt(400000))
lower <- pnorm(19569.86, mean = 20000, sd = sqrt(400000))
upper - lower
power <- c(0,1,2,3,4)
dists <- rgamma(10000, shape = 10^power, scale = 2)
dists
dist1 <- rgamma(10000, shape = 1, scale = 2)
dist10 <- rgamma(10000, shape = 10, scale = 2)
dist100 <- rgamma(10000, shape = 100, scale = 2)
dist1000 <- rgamma(10000, shape = 1000, scale = 2)
dist10000 <- rgamma(10000, shape = 10000, scale = 2)
qqplot(dist1)
qqnorm(dist1)
qqnorm(dist10)
qqnorm(dist100)
qqnorm(dist1000)
qqnorm(dist10000)
dist1 <- rgamma(1000, shape = 1, scale = 2, title = "Shape = 1")
dist1 <- rgamma(1000, shape = 1, scale = 2, main = "Shape = 1")
dist10 <- rgamma(1000, shape = 10, scale = 2, main = "Shape = 10")
dist100 <- rgamma(1000, shape = 100, scale = 2, main = "Shape = 100")
dist1000 <- rgamma(1000, shape = 1000, scale = 2, main = "Shape = 1000")
dist10000 <- rgamma(1000, shape = 10000, scale = 2, main = "Shape = 10000")
dist1 <- rgamma(1000, shape = 1, scale = 2)
dist10 <- rgamma(1000, shape = 10, scale = 2)
dist100 <- rgamma(1000, shape = 100, scale = 2)
dist1000 <- rgamma(1000, shape = 1000, scale = 2)
dist10000 <- rgamma(1000, shape = 10000, scale = 2)
qqnorm(dist1, main = "Shape = 1")
qqnorm(dist10, main = "Shape = 10")
qqnorm(dist100, main = "Shape = 100")
qqnorm(dist1000, main = "Shape = 1000")
qqnorm(dist10000, main = "Shape = 10000")
qqline()
qqline(dist1)
qqnorm(dist1, main = "Shape = 1")
qqline(dist1)
qqline(dist10000)
qqnorm(dist1, main = "Shape = 1")
qqline(dist1)
qqnorm(dist10, main = "Shape = 10")
qqline(dist10)
qqnorm(dist100, main = "Shape = 100")
qqline(dist100)
qqnorm(dist1000, main = "Shape = 1000")
qqline(dist1000)
qqnorm(dist10000, main = "Shape = 10000")
qqline(dist10000)
1- qbeta(.4, 3, 2)
(2*3)/((5)^2 *(6))
(2*3)/(((5)^2) *(6))
(2*3)/25*6)
(2*3)/(25*6)
qbeta(.9,1,3)
?rnorm
pnorm(400, mean = 400, sd = 100)
pnorm(420, mean = 400, sd = 100) - pnorm(620, 400,100)
1-pnorm(600, mean = 400, sd = 100)
pnorm(420, mean = 480, sd = 100) - pnorm(620, 480,100)
pnorm(400, mean = 480, sd = 100)
pnorm(420, mean = 480, sd = 100) - pnorm(620, 480,100)
1-pnorm(600, mean = 480, sd = 100)
qnorm(0.3, mean = 480, sd = 100)
library(readxl)
library(readxl)
defense <- read_excel("cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("/cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("/../cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("..\cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("../../cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("/../chase/Desktop/RProjects/ds202/ds202_lab4/cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("/chase/Desktop/RProjects/ds202/ds202_lab4/cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("/Users/chase/Desktop/RProjects/ds202/ds202_lab4/cyclonesFootball2019.xlsx", sheet='Defensive')
defense
defense <- read_excel("../ds202/ds202_lab4/cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("../../ds202_lab4/cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("../../../cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("/../cyclonesFootball2019.xlsx", sheet='Defensive')
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
getwd()
setwd(/Users/chase/Desktop/RProjects/ds202/ds202_lab4)
setwd('/Users/chase/Desktop/RProjects/ds202/ds202_lab4')
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense
library(readxl)
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense
biography <- read_excel("../cyclonesFootball2019.xlsx", sheet = "Biography")
biography
### Cleaning defense ###
colnames(defense)
type(defense[,names])
typeof(defense[,names])
### Cleaning defense ###
names <- c(colnames(defense))
typeof(defense[,names])
typeof(defense[,names[1]])
typeof(defense[,names[2]])
typeof(defense[,names[3]])
### Cleaning defense ###
colnames(defense)
typeof(defense[,"Opponent_Opponent"])
typeof(defense[,"Turnover_FF"])
library(tidyverse)
numCols = colnames(defense[,c(3:11)]
numCols
numCols = colnames(defense[,c(3:11)])
numCols
?mutate
defense <- defense %>% select(, cols = numCols )  %>% transform(, numCols = as.integer(numCols))
defense <- defense %>% select(cols = numCols )  %>% transform(numCols = as.integer(numCols))
### Cleaning defense ###
names <- c(colnames(defense))
names
defense <- defense %>% drop_na()
defense
numCols
defense <- defense %>% select(cols = numCols )  %>% transform(numCols = as.integer(numCols))
numCols = colnames(defense[,c(3:11)])
defense <- defense %>% select(cols = numCols )  %>% transform(numCols = as.integer(numCols))
as.integer(defense[,"Turnover_Int"])
as.integer(defense[,"Turnover_INT"])
defense <- defense %>% select(cols = numCols )  %>% transform(numCols = defense[as.integer(numCols),numCols])
defense <- defense %>% transform(numCols = defense[as.integer(numCols),numCols])
defense <- defense %>% transform(defense[is.integer(numCols),numCols] = as.integer(defense[,numCols]) )
defense <- defense %>% transform(defense[is.integer(numCols),numCols]) = as.integer(defense[,numCols]) )
defense <- defense %>% transform(defense[is.integer(numCols),numCols]) = as.integer(defense[,numCols])
defense <- defense %>% transform(defense = unlist(defense))
defense
typeof(defense$Name)
typeof(defense$Tackles_Solo)
defense <- defense %>% transform(defense = unlist(defense)) %>% transform(defense[,numcols] = as.integer(defense[,numcols]))
defense <- defense %>% transform(defense = unlist(defense)) %>% transform(defense[,numcols] = as.integer(defense[,numcols])
defense <- defense %>% transform(defense = unlist(defense)) %>% transform(defense[,numcols] = as.integer(defense[,numcols])))
defense <- defense %>% transform(defense = unlist(defense)) %>% transform(defense[,numcols] = as.integer(defense[,numcols]))
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense
### Cleaning defense ###
names <- c(colnames(defense))
names
defense <- defense %>% drop_na()
numCols = colnames(defense[,c(3:11)])
defense <- defense %>% transform(defense = unlist(defense)) %>% transform(defense[,numcols] = as.integer(defense[,numcols]))
defense <- defense %>% transform(defense = unlist(defense))###%>% transform(defense[,numcols] = as.integer(defense[,numcols]))
defense
defense <- defense %>% transform(defense = unlist(defense)) %>% select(numCols) %>% mutate_each(as.integer())
defense <- defense %>% transform(defense = unlist(defense)) %>% select(numCols) %>% mutate_each(as.integer(defense))
defense <- defense %>% transform(defense = unlist(defense)) %>% select(numCols) %>% mutate_each(as.integer(defense))
defense <- defense %>% transform(defense = unlist(defense, recursive = TRUE)) %>% select(numCols) %>% mutate_each(as.integer(defense))
defense
defense <- defense %>% transform(defense = unlist(defense, recursive = TRUE)) %>% select(numCols) %>% mutate_each(as.integer())
defense <- defense %>% transform(defense = unlist(defense, recursive = TRUE)) %>% select(numCols) %>% mutate_each(numCols = as.integer(numCols))
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense
### Cleaning defense ###
names <- c(colnames(defense))
names
defense <- defense %>% drop_na()
defense
defense <- defense %>% transform(defense = unlist(defense))
defense
typeof(defense$defense)
typeof(defense$Turnover_FF)
typeof(defense$Tackles_Solo)
defense$Tackles_Solo = asInteger(defense$Tackles_Solo)
defense$Tackles_Solo = as.Integer(defense$Tackles_Solo)
defense$Tackles_Solo = as.integer(defense$Tackles_Solo)
defense$Tackles_Solo
defense[,numCols] = as.integer(defense[,numCols])
defense <- defense %>% mutate_each(funs("asInt" = as.integer(.)))
defense <- defense %>% mutate_each(funs = list(as.integer())))
defense <- defense %>% mutate_each(funs = list(as.integer()))
defense <- defense %>% mutate_each(funs = list(sum))
defense
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense
### Cleaning defense ###
names <- c(colnames(defense))
names
defense <- defense %>% drop_na()
defense
numCols = colnames(defense[,c(3:11)])
defense <- defense %>% transform(defense = unlist(defense))
defense
?lapply
?apply
apply(defense[ ,numCols], 2,function(x) as.numeric(as.character(x)))
str(defense)
defense <- apply(defense[ ,numCols], 2,function(x) as.numeric(as.character(x)))
str(defense)
defense
typeof(defense$Tackles_Solo)
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense
### Cleaning defense ###
names <- c(colnames(defense))
names
defense <- defense %>% drop_na()
defense
defense <- defense %>% drop_na()
defense
names <- c(colnames(defense))
names
numCols = colnames(defense[,c(3:11)])
defense <- defense %>% transform(defense = unlist(defense))
defense
defense
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense
### Cleaning defense ###
names <- c(colnames(defense))
names
defense <- defense %>% drop_na()
defense
names <- c(colnames(defense))
names
numCols <- c(3:11)
defense <- convert(int(numCols))
defense %>% mutate_at(int(numCols))
install.packages("convert")
defense <- data.frame(defense)
defense
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense
### Cleaning defense ###
defense <- data.frame(defense)
defense
names <- c(colnames(defense))
names
defense <- defense %>% drop_na()
defense
numCols <- c(3:11)
str(defense)
typeof(defense$Name)
numCols <- defense[,c(3:11)]
numCols <- c(3:11)
defense <- defense %>% mutate_at(vars(numCols),.funs = as.integer(x))
defense <- defense %>% mutate_at(vars(numCols),.funs = as.integer())
defense <- defense %>% mutate_at(vars(numCols),.funs = to_numeric())
defense <- defense %>% transform(Tackles_Solo = as.integer(Tackles_Solo))
typeof(defense$Tackles_Solo)
defense
defense <- defense %>% transform(colnames(defense) = as.integer(colnames(defense)))
defense <- apply(defense[,numCols], 2, function(x) as.integer)
typeof(defense$Tackles_Solo)
typeof(defense$Tackles_ASST())
typeof(defense$Tackles_ASST)
defense
defense <- apply(defense[,numCols], 2, function(x) as.integer(x))
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense
### Cleaning defense ###
defense <- data.frame(defense)
defense
names <- c(colnames(defense))
names
defense <- defense %>% drop_na()
defense
numCols <- c(3:11)
defense <- apply(defense[,numCols], 2, function(x) as.integer(x))
typeof(defense$Tackles_ASST)
defense)
defense
defense <- read_excel("../cyclonesFootball2019.xlsx", sheet='Defensive')
defense
### Cleaning defense ###
defense <- data.frame(defense)
defense
names <- c(colnames(defense))
names
defense <- defense %>% drop_na()
defense
numCols <- c(3:11)
defense[,numCols] <- apply(defense[,numCols], 2, function(x) as.integer(x))
defense
typeof(defense$Opponent_Opponent)
typeof(defense$Tackles_ASST)
defense$Name <- factor(defense$Name)
defense$Opponent_Opponent <- factor(defense$Opponent_Opponent)
defense
typeof(defense)
typeof(defense$Name)
defense$Name <- factor(defense$Name)
defense$Opponent_Opponent <- factor(defense$Opponent_Opponent)
typeof(defense$Name)
typeof(defense$Opponenet_Opponent)
typeof(defense$Opponent_Opponent)
typeof(defense$Name)
defense
defense[,c(1:2)] <- apply(defense[,c(1:2)], 2, function(x) as.factor(x))
defense
typeof(defense$Name)
defense <- data.frame(defense)
defense
defense$Name
typeof(defense$Name[1]]
typeof(defense$Name[1])
str(defense)
defense[,'Name'] <- as.factor(defense[,'Name'])
str(defense)
defense[,'Opponent_Opponent'] <- as.factor(defense[,'Opponent_Opponent'])
str(defense)
### Biography ###
biography <- read_excel("../cyclonesFootball2019.xlsx", sheet = "Biography")
biography
?mutate_at
?separate
biography <- biography %>% separate(Height, into = c(ft,inch), sep = "-" )
biography <- biography %>% separate(Height, into = c("ft","inch"), sep = "-" )
biography
### Biography ###
biography <- read_excel("../cyclonesFootball2019.xlsx", sheet = "Biography")
biography
biography <- biography %>% separate(Height, into = c("ft","inch"), sep = "-" ) %>% transmute(c(ft,inch), "height(in)" = ft*12 + inch)
biography$ft
### Biography ###
biography <- read_excel("../cyclonesFootball2019.xlsx", sheet = "Biography")
biography
biography <- biography %>% separate(Height, into = c("ft","inch"), sep = "-" ) #%>% transmute(c(ft,inch), "height(in)" = ft*12 + inch)
biography$ft
biography$inch
?mutate_at
biography <- biography %>% separate(Height, into = c("ft","inch"), sep = "-" ) %>% mutate_at(c(ft,inch), ft = as.integer(ft), inch = as.integer(inch)) %>% transmute(c(ft,inch), "height(in)" = ft*12 + inch)
### Biography ###
biography <- read_excel("../cyclonesFootball2019.xlsx", sheet = "Biography")
biography
biography <- biography %>% separate(Height, into = c("ft","inch"), sep = "-" ) %>% mutate_at(c(ft,inch), ft = as.integer(ft), inch = as.integer(inch)) %>% transmute(c(ft,inch), "height(in)" = ft*12 + inch)
biography <- biography %>% separate(Height, into = c("ft","inch"), sep = "-" ) %>% mutate_at(c("ft","inch"), "ft" = as.integer("ft"), "inch" = as.integer("inch")) %>% transmute(c(ft,inch), "height(in)" = ft*12 + inch)
### Biography ###
biography <- read_excel("../cyclonesFootball2019.xlsx", sheet = "Biography")
biography
biography <- biography %>% separate(Height, into = c("ft","inch"), sep = "-" ) %>% mutate_at(c("ft","inch"), "ft" = as.integer("ft"), "inch" = as.integer("inch")) %>% transmute(c(ft,inch), "height(in)" = ft*12 + inch)
