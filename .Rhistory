weight0
?count
weight0[1:4,"Frequency"] <- count(dat2)
count(dat2)
weight0[1:4,"Frequency"] <- n(dat2$Diet)
weight0[1:4,"Frequency"] <- n(dat2$Diet == 1)
weight0[1:4,"Frequency"] <- dplyr::n(dat2$Diet == 1)
?n
dat2
weight0[1:4,"Frequency"] <- dat2 %>% filter(Diet ==1)
weight0[1:4,"Frequency"] <- dat2 %>% filter(Diet ==1, n())
weight0[1:4,"Frequency"] <- sum(dat2 %>% filter(Diet ==1))
weight0[1:4,"Frequency"] <- count(dat2 %>% filter(Diet ==1))
weight0["Frequency"] <- dat2 %>% filter(Diet == 1)
weight0["Frequency"] <- dat2 %>% filter(Diet == 1, n())
dat2 %>% filter(Diet == 1)
infovec <- dat2 %>% filter(Diet) %>% summarize()
infovec <- dat2 %>% filter(Diet == 1) %>% summarize()
infovec
weight0[1:4,"Frequency"] <- cbind(length(dat2$Diet == 1),length(dat2$Diet == 2)length(dat2$Diet == 3)length(dat2$Diet == 4))
weight0[1:4,"Frequency"] <- cbind(length(dat2$Diet == 1),length(dat2$Diet == 2),length(dat2$Diet == 3),length(dat2$Diet == 4))
weight0[1:4,"Frequency"] <- c(length(dat2$Diet == 1),length(dat2$Diet == 2),length(dat2$Diet == 3),length(dat2$Diet == 4))
weight0
dat2$Diet == 2
length(dat2$Diet == 2)
sum(dat2$Diet == 2)
weight0[1:4,"Frequency"] <- c(sum(dat2$Diet == 1),sum(dat2$Diet == 2),sum(dat2$Diet == 3),sum(dat2$Diet == 4))
weight0
ChickWeight
ChickWeight %>% group_by(Chick)
head(ChickWeight,20)
ChickWeida[20:40,]
ChickWeight[20:40,]
?mutate
?summarize
ChickWeight %>% group_by(Time) %>% summarize(n = n())
ChickWeight %>% group_by(Time)
ChickWeight %>% group_by(Time)
group_by(ChickWeight,Time)
d1 <- group_by(ChickWeight,Time)
d1
ChickWeight %>% group_by(Chick) %>% summarize(n = n())
ChickWeight %>% group_by(Chick) %>% summarize(n = n())
complete <- ChickWeight[,ChickWeight$Chick %in% c(18,16,15)]
complete <- ChickWeight[,ChickWeight$Chick !%in% c(18,16,15)]
complete <- ChickWeight[ChickWeight$Chick !%in% c(18,16,15),]
complete <- ChickWeight[ChickWeight$Chick %in% c(18,16,15),]
?mutate
complete %>% group_by(Chick) %>% summarize(n = n())
complete <- ChickWeight[ChickWeight$Chick %notin% c(18,16,15),]
`%notin%` <- Negate(`%in%`)
complete <- ChickWeight[ChickWeight$Chick %notin% c(18,16,15),]
complete %>% group_by(Chick) %>% summarize(n = n())
head(complete,3)
complete
complete %>% group_by(Chick) %>% mutate(weightgain = weight - weight[0])
complete %>% group_by(Chick) %>% mutate(weight - weight[0])
complete %>% group_by(Chick,weight) %>% mutate(weight - weight[0])
complete %>% group_by(Chick) %>% mutate(weightgain = weight - first())
complete %>% group_by(Chick) %>% mutate(weightgain = weight - first(complete))
complete %>% group_by(Chick) %>% mutate(weightgain = weight - weight[1])
complete
complete <- complete %>% group_by(Chick) %>% mutate(weightgain = weight - weight[1])
complete
complete[20:40,]
library(ggplot2)
ggplot(data = complete, mapping = aes(x = weightgain, fill = Diet)) + geom_boxplot
ggplot(data = complete, mapping = aes(x = weightgain, fill = Diet)) + geom_boxplot()
ggplot(data = complete, mapping = aes(x = weightgain, y = Diet)) + geom_boxplot()
ggplot(data = complete, mapping = aes(y = weightgain, x = Diet)) + geom_boxplot()
ggplot(data = complete, mapping = aes(y = weightgain, x = Diet, FUN = median())) + geom_boxplot()
ggplot(data = complete, mapping = aes(y = weightgain, x = Diet, FUN = median) + geom_boxplot()
ggplot(data = complete, mapping = aes(y = weightgain, x = Diet, FUN = median)) + geom_boxplot()
ggplot(data = complete, mapping = aes(y = weightgain, x = Diet, FUN = median)) + geom_boxplot()
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, FUN = median))) + geom_boxplot()
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + geom_boxplot()
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + geom_boxplot() + ylim(0)
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + geom_boxplot() + ylim(0, max(diet3))
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + geom_boxplot() + ylim(0, max(diet3)+100)
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + geom_boxplot() + ylim(0, max(Diet))
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + geom_boxplot() + ylim(0,300)
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + geom_boxplot() + ylim(0,310)
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + geom_boxplot() + ylim(0,320)
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + geom_boxplot() + ylim(0,330)
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + geom_boxplot() + ylim(0,350)
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + geom_boxplot() + ylim(0,330)
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + ggtitle("weightgain vs Diet")+ geom_boxplot() + ylim(0,330)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
`%notin%` <- Negate(`%in%`)
ggplot(data = complete, mapping = aes(y = weightgain, x = reorder(Diet, weightgain, FUN = median))) + xlab("Diet") +ggtitle("weightgain vs Diet")+ geom_boxplot() + ylim(0,330)
complete %>% filter(Time == 21) %>% summarize(
MinGhick = min()
MaxGain = max()
)
complete %>% filter(Time == 21) %>% summarize(
MinGhick = min()
MaxGain = max()
)
complete %>% filter(Time == 21) %>% summarize(
MinGhick = min()
MaxGain = max()
)
complete %>% filter(Time == 21) %>% summarize(
MinGhick = min()
MaxGain = max())
complete %>% filter(Time == 21) %>% summarize(
MinGhick = min(),
MaxGain = max()
)
complete %>% filter(Time == 21) %>% summarize(
MinGhick = min(),
MaxGain = max()
)
complete %>% filter(Time == 21) %>% summarize(
MinGain = min(weightgain),
MaxGain = max(weightgain)
)
complete %>% filter(Time == 21) %>% group_by(Chick) %>% summarize(
MinGain = min(weightgain),
MaxGain = max(weightgain)
)
complete %>% filter(Time == 21)
complete %>% filter(Time == 21) %>% summarize(
MinGain = min(weightgain),
MaxGain = max(weightgain)
)
complete %>% filter(Time == 21) %>% summarize(
MinGain = min(weightgain),
MaxGain = max(weightgain)
)
MinMax <- complete %>% filter(Time == 21) %>% summarize(
MinGain = min(weightgain),
MaxGain = max(weightgain)
)
MinMax
MinMax <- complete %>% filter(Time == 21) %>% group_by(Chick) %>% summarize(
MinGain = min(weightgain),
MaxGain = max(weightgain)
)
MinMax
MinMax <- complete %>% filter(Time == 21) %>% group_by(Chick) %>% summarize(
min(weightgain),
max(weightgain)
)
MinMax
min(MinMax
min(MinMax)
min(MinMax$`min(weightgain)`)
max(MinMax$`min(weightgain)`)
MinMax <- complete %>% filter(Time == 21) %>% group_by(Chick) %>% summarize(
min(min(weightgain)),
max(max(weightgain))
)
MinMax
MinMax <- complete %>% filter(Time == 21) %>% group_by(Chick) %>% summarize(
mean(weightgain)
)
MinMax
dat1 <- ChickWeight %>%
filter(Time == 0) %>%
group_by(Diet) %>%
summarize(average_weight = mean(weight, na.rm = TRUE),
sd_weight = sd(weight, na.rm = TRUE))
dat1
MinMax <- complete %>% filter(Time == 21) %>% group_by(weightgain) %>% summarize(
mean(weightgain)
)
MinMax
MinMax <- complete %>% filter(Time == 21) %>% summarize(
mean(weightgain)
)
MinMax
MinMax <- complete %>% filter(Time == 21) %>% select(weightgain) %>% summarize(
min = min()
max = max()
)
MinMax <- complete %>% filter(Time == 21) %>% select(weightgain) %>% summarize(
min = min(),
max = max()
)
MinMax <- complete %>% filter(Time == 21) %>% select(weightgain) %>% summarize(
min = min(weightgain),
max = max(weightgain)
)
MinMax
dat1 <- ChickWeight %>%
filter(Time == 0) %>%
group_by(Diet) %>%
summarize(average_weight = mean(weight, na.rm = TRUE),
sd_weight = sd(weight, na.rm = TRUE))
dat1
Max <- complete %>% filter(Time == 21) %>% group_by(weightgain) %>% filter(weightgain == max(weightgain))
Max
Max <- complete %>% filter(Time == 21) %>% filter(weightgain == max(weightgain))
Max
Max <- max(complete %>% filter(Time == 21))
Max <- max(complete %>% filter(Time == 21) %>% select(weightgain))
complete %>% filter(Time == 21) %>% select(weightgain)
finalWeek <- complete %>% filter(Time == 21) %>% select(weightgain)
finalWeek <- complete %>% filter(Time == 21)
Max <- max(finalWeek$weightgain)
Min <- min(finalWeek$weightgain)
finalWeek
maxDiet <- complete %>% filter(Time == 21, weightgain == Max)
minDiet <- complete %>% filter(Time == 21, weightgain == Min)
maxDiet
minDiet$Diet
maxDiet$Diet
minDiet$Diet
finalWeek
ggplot(finalWeek, aes(x = Chick, y = weightgain, color = Diet)) + geom_point()
ggplot(finalWeek, aes(x = weightgain fill = Diet)) + geom_point()
ggplot(finalWeek, aes(x = weightgain, fill = Diet)) + geom_point()
ggplot(finalWeek, aes(x = weightgain, fill = Diet)) + geom_bar()
ggplot(finalWeek, aes(x = Chick, y = weightgain, fill = Diet)) + geom_bar()
ggplot(finalWeek, aes(x = Chick, y = weightgain, fill = Diet)) + geom_point()
ggplot(finalWeek, aes(x = Chick, y = weightgain, color = Diet)) + geom_point()
Min
Max
maxDiet$Chick
minDiet$Chick
maxDiet$Chick
minDiet$Diet
MinMax <- complete %>% filter(Chick %in% c(24,32))
MinMax
ggplot(minMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line()
ggplot(MinMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line()
complete %>% group_by(Time) %>% summarize(MeanAtTime = mean(weightgain))
MeanGain <- complete %>% group_by(Time) %>% summarize(MeanAtTime = mean(weightgain))
MinMax + MeanGain
MinMax
MeanGain["Time"] <- complete %>% filter(Chick == 32) %>% select(Time)
MeanGain["Time"] <- complete$Time[1:12]
MeanGain
ggplot(MinMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line() + geom_line(MeanGain, aes(x = Time, y = MeanAtTime))
ggplot(MinMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line() + geom_line(MeanGain, mapping = aes(x = Time, y = MeanAtTime))
MinMax
ggplot(MinMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line() + geom_line(MeanGain, mapping = aes(x = Time, y = MeanAtTime))
Meangain["Chick"] <- c("Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean")
MeanGain["Chick"] <- c("Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean", "Mean")
MeanGain
ggplot(MinMax, aes(x = Time, y = weightgain, color = Chick)) + geom_line() + geom_line(MeanGain, mapping = aes(x = Time, y = MeanAtTime))
complete
complete %>% group_by(Diet) %>% summarize(variance = var(weightgain) min = min(weightgain), max = max(weightgain))
complete %>% group_by(Diet) %>% summarize(variance = var(weightgain), min = min(weightgain), max = max(weightgain))
MinMaxVarDiet <- complete %>% group_by(Diet) %>% summarize(variance = var(weightgain), min = min(weightgain), max = max(weightgain))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = variance, fill = Diet))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = variance, color = Diet))
ggplot(MinMaxVarDiet) + geom_hist(mapping = aes(x = variance, color = Diet))
ggplot(MinMaxVarDiet) + geom_histogram(mapping = aes(x = variance, color = Diet))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, color = Diet))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = variance, color = Diet))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(y = variance, color = Diet))
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = variance), stat = "identity")
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = Max), stat = "identity") + geom_bar(mapping = aes(x = Diet, y = Min), stat = "identity")
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = Max), stat = "identity") + geom_bar(mapping = aes(x = Diet, y = Min), stat = "identity")
MinMaxVarDiet
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = Max, fill = Diet), stat = "identity") + geom_bar(mapping = aes(x = Diet, y = Min, fill = Diet), stat = "identity")
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = max, fill = Diet), stat = "identity") + geom_bar(mapping = aes(x = Diet, y = min, fill = Diet), stat = "identity")
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = max, fill = Diet), stat = "identity") + geom_point(mapping = aes(x = Diet, y = min, fill = Diet), stat = "identity")
MinMax
ggplot(MinMaxVarDiet) + geom_bar(mapping = aes(x = Diet, y = variance), stat = "identity")
data("french_fries", package = "reshape2")
dat <- data("french_fries", package = "reshape2")
library(tidyverse)
colnames(dat)
dat
dat
data("french_fries", package = "reshape2")
french_fries
?french_fries
?data("french_fries", package = "reshape2")
data("fbiwide", package = "classdata")
fbiwide
dat <- fbiwide %>% pivot_longer(names_to = "Type", values_to = "incidences")
dat <- fbiwide %>% pivot_longer(cols = c(Aggravated.assault, Burglary, Larceny.theft),names_to = "Type", values_to = "incidences")
dat
fbiwide
dat
colnames(dat)
dat$incidences
library(readxl)
df
library(tidyverse)
df <- data.frame(x = c("a.b", "a.d", "b.c", NA))
df
df
df <- data.frame(x = c("a.b", "a.d", "b.c", NA), b= 1)
df
df %>% separate(col = x, into = c("A", "B"))
df
df <- df %>% separate(col = x, into = c("A", "B"))
df
df %>% seaparate(col = x, into = c("A", "B"), sep = '[^[:alnum:]]+')
df %>% separate(col = x, into = c("A", "B"), sep = '[^[:alnum:]]+')
df <- data.frame(x = c("a.b", "a.d", "b.c", NA), b= 1)
df
df %>% separate(col = x, into = c("A", "B"))
df
df %>% separate(col = x, into = c("A", "B"), sep = '[^[:alnum:]]+')
'\\x'
cat(\\.)
cat('\\.')
address <- c("1301 8th St. SE, Orange City, Iowa 51041")
df1
df1 <- data.frame(address = address)
df1
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',')
%>% separate(col = StateZip, into = c("State", "Zip", sep = ' '))
%>% separate(col = StateZip, into = c("State", "Zip", sep = ' '))
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',') %>% separate(col = StateZip, into = c("State", "Zip", sep = ' '))
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',') %>% separate(col = StateZip, into = c("Nothing","State", "Zip", sep = ' '))
df1 <- data.frame(address = address)
df1
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',') %>% separate(col = StateZip, into = c("Nothing","State", "Zip", sep = ' '))
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',') %>% separate(col = StateZip, into = c("Nothing","State", "Zip", sep = ' ')) %>% select(-nothing)
df1 %>% separate(col = address, into = c("Street", "City", "StateZip"), sep = ',') %>% separate(col = StateZip, into = c("Nothing","State", "Zip", sep = ' ')) %>% select(-Nothing)
read_csv(url)
campaign <- readr::read_csv(url)
url <- "https://data.iowa.gov/api/views/3adi-mht4/rows.csv"
campaign <- readr::read_csv(url)
campaign
colnames(campaign)
head(campaign)
head(campaign[1:5,6:])
head(campaign[1:5,6:10])
head(campaign[1:5,10:15])
head(campaign[1:5,10:14])
head(campaign[1:5,1:14])
head(campaign[1:5,1:5])
head(campaign[1:5,5:10])
head(campaign[1:5,10:14])
dat <- campaign %>% separate("Date", c("Month", "Day", "Year")) %>% separate("Zip", c('Zip5', 'addon')
dat
dat <- campaign %>% separate("Date", c("Month", "Day", "Year")) %>% separate("Zip", c('Zip5', 'addon'))
dat
dat1 <- dat %>% replace_na(list(addon = '', zip5 = 'Unknown')) %>%
dat2 <- dat %>% drop_na("First Name", "Last Name")
dat <- campaign %>% separate("Date", c("Month", "Day", "Year")) %>% separate("Zip", c('Zip5', 'addon'))
dat1 <- dat %>% replace_na(list(addon = '', zip5 = 'Unknown')) %>%
dat2 <- dat %>% drop_na("First Name", "Last Name")
dat <- campaign %>% separate("Date", c("Month", "Day", "Year")) %>% separate("Zip", c('Zip5', 'addon'))
dat1 <- dat %>% replace_na(list(addon = '', zip5 = 'Unknown'))
dat2 <- dat %>% drop_na("First Name", "Last Name")
dat1
dat2
dat3 <- dat2 %>% unite("Full Name", "First Name", "Last Name", sep = ' ')
dat3
view(dat3)
view(dat3)
dat5 <- dat3 %>% separate(col = "date", into = c("Year", "Month", "Day"))
dat5 <- dat3 %>% separate(col = "Date", into = c("Year", "Month", "Day"))
dat5 %>% select("Expenditure Amount") %>% summarize(Total = sum(), Max = max())
dat3 %>% select("Expenditure Amount") %>% summarize(Total = sum(), Max = max())
dat3 %>% summarize(Total = sum(Expenditure Amount), Max = max(Expenditure Amount))
dat3 %>% summarize(Total = sum(Expenditure Amount), Max = max(Expenditure Amount))
dat3 %>% summarize(Total = sum('Expenditure Amount'), Max = max('Expenditure Amount'))
dat3 %>% summarize(Total = sum("Expenditure Amount"), Max = max('Expenditure Amount'))
dat3 %>% select("Expenditure Amount" %>% summarize(Total = sum(), Max = max())
summary <- dat3 %>% select("Expenditure Amount" %>% summarize(Total = sum(), Max = max())
summary <- dat3 %>% select("Expenditure Amount") %>% summarize(Total = sum(), Max = max())
summary <- dat3 %>% select("Expenditure Amount") %>% summarize_each(Total = sum(), Max = max())
summary <- dat3 %>% select("Expenditure Amount") %>% summarize_each(sum(), max()))
summary <- dat3 %>% select("Expenditure Amount") %>% summarize_each(sum(), max())
dist= pgamma(y, shape = 1.6, 2.0)
dist
rgamma(10000, 1.6,2.0)
sit1 <- rgamma(10000, 1.6,2.0)
mean(rgamma(10000, 1.6,2.0))
var(dist1)
dist <- rgamma(10000, 1.6,2.0)
mean(rgamma(10000, 1.6,2.0))
var(dist1)
mean(dist1)
dist1 <- rgamma(10000, 1.6,2.0)
mean(dist1)
var(dist1)
dist1 <- rgamma(10000, shape = 1.6,scale = 2.0)
mean(dist1)
var(dist1)
1- pgamma(5, shape = 1.6, scale = 2.0)
?pnorm
1-pnorm(5, mean = mean(dist1), sd = sqrt(var(dist1)))
dist2 <- rgamma(10000, shape = 1000, scale = 20)
dist2 <- rgamma(10000, shape = 1000, scale = 20)
mean(dist2)
var(dist2)
median(dist2)
qgamma(.75,shape = 1000, scale = 20)
1.6*2
1.6 * (4)
1000*(20)^2
qgamma(.25, shape = 1000, scale = 20)
dist2 <- rgamma(10000, shape = 1000, scale = 20)
median(dist2)
?pnorm
pnorm(20422.87, mean = 20000, sd = sqrt(400000))
pnorm(20422.87, mean = 20000, sd = sqrt(400000))
pnorm(19569.86, mean = 20000, sd = sqrt(400000))
1-pnorm(5, mean = 3.2, sd = sqrt(6.4))
upper <- pnorm(20422.87, mean = 20000, sd = sqrt(400000))
lower <- pnorm(19569.86, mean = 20000, sd = sqrt(400000))
upper - lower
power <- c(0,1,2,3,4)
dists <- rgamma(10000, shape = 10^power, scale = 2)
dists
dist1 <- rgamma(10000, shape = 1, scale = 2)
dist10 <- rgamma(10000, shape = 10, scale = 2)
dist100 <- rgamma(10000, shape = 100, scale = 2)
dist1000 <- rgamma(10000, shape = 1000, scale = 2)
dist10000 <- rgamma(10000, shape = 10000, scale = 2)
qqplot(dist1)
qqnorm(dist1)
qqnorm(dist10)
qqnorm(dist100)
qqnorm(dist1000)
qqnorm(dist10000)
dist1 <- rgamma(1000, shape = 1, scale = 2, title = "Shape = 1")
dist1 <- rgamma(1000, shape = 1, scale = 2, main = "Shape = 1")
dist10 <- rgamma(1000, shape = 10, scale = 2, main = "Shape = 10")
dist100 <- rgamma(1000, shape = 100, scale = 2, main = "Shape = 100")
dist1000 <- rgamma(1000, shape = 1000, scale = 2, main = "Shape = 1000")
dist10000 <- rgamma(1000, shape = 10000, scale = 2, main = "Shape = 10000")
dist1 <- rgamma(1000, shape = 1, scale = 2)
dist10 <- rgamma(1000, shape = 10, scale = 2)
dist100 <- rgamma(1000, shape = 100, scale = 2)
dist1000 <- rgamma(1000, shape = 1000, scale = 2)
dist10000 <- rgamma(1000, shape = 10000, scale = 2)
qqnorm(dist1, main = "Shape = 1")
qqnorm(dist10, main = "Shape = 10")
qqnorm(dist100, main = "Shape = 100")
qqnorm(dist1000, main = "Shape = 1000")
qqnorm(dist10000, main = "Shape = 10000")
qqline()
qqline(dist1)
qqnorm(dist1, main = "Shape = 1")
qqline(dist1)
qqline(dist10000)
qqnorm(dist1, main = "Shape = 1")
qqline(dist1)
qqnorm(dist10, main = "Shape = 10")
qqline(dist10)
qqnorm(dist100, main = "Shape = 100")
qqline(dist100)
qqnorm(dist1000, main = "Shape = 1000")
qqline(dist1000)
qqnorm(dist10000, main = "Shape = 10000")
qqline(dist10000)
1- qbeta(.4, 3, 2)
(2*3)/((5)^2 *(6))
(2*3)/(((5)^2) *(6))
(2*3)/25*6)
(2*3)/(25*6)
qbeta(.9,1,3)
library(tidyverse)
library(readxl)
setwd("/Users/chase/Desktop/RProjects/ds202/ds202_lab4")
defense <- read_excel('cyclonesFootball2019.xlsx', sheet='Defensive')
head(defense)
defense <- data.frame(defense)
defense$Name <- as.factor(defense$Name)
defense$Opponent_Opponent <- as.factor(defense$Opponent_Opponent)
head(defense)
defense <- defense %>% mutate_at(.vars=c(3:11), .funs= list(as.numeric))
biography <- read_excel('cyclonesFootball2019.xlsx', sheet='Biography')
biography <- data.frame(biography)
biography <- biography %>% separate(Height, sep = "-", into = c('Ft', 'inch'), remove = TRUE)
biography$Ft <- as.numeric(biography$Ft)
biography$inch <- as.numeric(biography$inch)
biography$Height <- biography %>% transmute(inches = (Ft * 12) + inch)
biography <- biography %>% select(-c(3,4))
biography <- biography %>% mutate_at(.vars = c(1,2,4,5,6), .funs = funs(as.factor)) %>% mutate_at(.vars = c(3), .funs = funs(as.numeric))
head(biography)
colnames(biography)
colnames(defense)
biography$Hometown
biography <- biography %>% separate(Hometown, se = ", ", into = c("Home City", "Home State"))
biography
biography %>% add_count(`Home State`, name = "Players in State") %>% select(`Home State`, `Players in State`) %>% distinct()
#offense
offense <- read_excel('cyclonesFootball2019.xlsx', sheet='Offensive')
#offense
offense <- read_excel('cyclonesFootball2019.xlsx', sheet='Offensive')
offense$Name <- as.factor(offense$Name)
offense$Opponent_Opponent <- as.factor(offense$Opponent_Opponent)
offense <-separate(offense, "Passing_CMP-ATT", into=c("Passing_CMP", "Passing_ATT"), sep="-\r\n ")
offense <- mutate_at(offense, .vars=c(3:13), .funs=list(as.numeric))
offClean <- offense
str(offClean)
offClean
offJoin <- biography %>% inner_join(offClean, by = Name)
?inner_join
colnames(biography)
colnames(offClean)
offJoin <- biography %>% inner_join(offClean, by = 'Name')
offJoin
offClean
str(offClean)
library(ggplot2)
ggplot(data = offJoin, mapping = aes(Weight, Receiving_YDS)) + geom_scatter()
ggplot(data = offJoin, mapping = aes(Weight, Receiving_YDS)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyverse)
head(offJoin[,c('Name', "Home City", "Home State")])
head(offJoin[,c('Name', "Home City", "Home State")] %>% distinct())
offJoin[,c('Name', "Home City", "Home State")] %>% distinct()
ggplot(data = offJoin, mapping = aes(Weight, Receiving_YDS)) + geom_point() +geom_smooth()
ggplot(data = offJoin, mapping = aes(Weight, Receiving_YDS)) + geom_point() +geom_smooth(method = 'lm')
ggplot(data = offJoin, mapping = aes(Weight, Receiving_YDS)) + geom_point() +geom_smooth(method = 'lm')
ggplot(data = offJoin, mapping = aes(Weight, Receiving_YDS)) + geom_point() +geom_smooth(method = 'lm')
